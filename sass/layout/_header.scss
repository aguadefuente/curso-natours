/***************HEADER*****************/

.header {
  height: 95vh;
  background-image: linear-gradient(
      to right bottom,
      rgba($color-primary-light, 0.8),
      rgba($color-primary-dark, 0.8)
    ),
    url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  clip-path: polygon(0% 0%, 100% 0%, 100% 75vh, 0% 100%);
  position: relative;

  /*
  -El header tiene una altura según el view port - no del 100% sino del 95%, para que siempre
  guarde esa dimensión.
  -Tiene una background image, y le ponemos antes de la url el linear gradient para que tenga
  como una veladura por encima. La dirección del gradient es de right to bottom y tiene dos 
  colores, de más claro a más oscuro. 
  - Cover, hace que siempre la imagen complete el contenedor. 
  - background-position, en nuestro caso pusimos top, hace que cuando agrandemos o achiquemos
  la página siempre se vea la parte de arriba de la imagen.
  - clip-path, me sirve para hacer figuras con los contenedores, imágenes.
  Por eso vemos el corte que tiene la imágen en el header. 
  La página https://bennettfeely.com/clippy/ te calcula cada lado para formar distintas figuras.
  - En CSS no podemos poner un hexagesimal color y después un opacity, sino rgba. Pero en SASS 
  sí. Entonces ponemos rgba y dentro nuestra variable más el grado de opacity.
  */

  &__logo-box {
    position: absolute;
    top: 4rem; /*antes pusimos 40px. Ahora es 4 por 10px del html root element igual 40px*/
    left: 4rem; /*lo mismo*/
  }
  /*es el div que contiene el logo.
    - Acá la position es absolute. Pero si vemos en el header class su position es relative. Esto
    hace un juego entre ambos elementos. Header es el parent del logo-box, y siendo su position
    relative ahora el absolute position del child en en relación a él y no al body. Ver esta
    página mejor explicado  
    https://css-tricks.com/absolute-positioning-inside-relative-positioning/
    */

  &__logo {
    height: 3.5rem;
    /* igual 35px*/
  }
  /*
    Sólo hace falta especificar el height y no el width, este lo pone el browser 
    */

  &__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);

    text-align: center; /*es para alinear el button*/
  }
  /*
    - Usamos transform:translate porque el positioning top y left lo mide desde los bordes
    del div y no hace que quede centrado, mientras que transform:translate mueve el div desde 
    el mismo, no desde su borde, es así que termina centrándose. Tb hace que sea responsive,
    y se mueva según el tamaño del browser.
    */
}
