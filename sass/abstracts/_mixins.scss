/*Acá creamos un mixin que será un clearfix, dado que al estar los div con float hace que colapse el 
heigth a 0px y se encimen unos a otros. Con este clearfix por medio del pseudo-element ::after creamos 
un elemento por detrás que mantiene la altura.
Luego agregamos este mixin con @include*/

@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

//mixin para centrar elementos

@mixin absCenter {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

//MEDIA QUERY MANAGER

/*
0 - 600px            =  phone
600px - 900px        =  tablet portrait
900px - 1200px       =  tablet landscape
(1200px - 1800px) is where our normal style apply. this is a desktop firs approach
1800px               =  big desktop

vamos a escribir max-width media-queries para los tres primeros y min-width para el último

Esta sería una forma:

@mixin respond-phone {
  @media (max-width: 600px) { @content;}
} 

Luego vamos al selector que querramos y ponemos @include respond-phone {..;}
El problema es que tendríamos que hacer un mixin para cada breakpoint. 

Entonces otra forma es la que veremos abajo y en el selector ponemos @include respond(phone) {..;}
  
definimos : $BREAKPOINT ARGUMENT CHOICES
- phone
- tab-port
- tab-land
- big-desktop

hacemos la conversión de px a em: 1em = 16px

600px = 37.5em (600/16) 
 
900px = 56.25em

1200px = 75em

1800px = 112.5em

*/

@mixin respond($breakpoint) {
  @if $breakpoint == phone {
    @media (max-width: 37.5em) {
      @content;
    }
  }

  @if $breakpoint == tab-port {
    @media (max-width: 56.25em) {
      @content;
    }
  }

  @if $breakpoint == tab-land {
    @media (max-width: 75em) {
      @content;
    }
  }

  @if $breakpoint == big-desktop {
    @media (min-width: 112.5em) {
      @content;
    }
  }
}

/*Media-queries que vamos a hacer y el orden:
- base
- typography
- general layout (header, footer, navigation bar...) + grid
- page layout
- component 
*/
